{
	"compiler": {
		"version": "0.8.25+commit.b61c2a91"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint24",
						"name": "referralFee_",
						"type": "uint24"
					},
					{
						"internalType": "address",
						"name": "usdt_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "userRegistar_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "vrfCoordinator_",
						"type": "address"
					},
					{
						"internalType": "bytes32",
						"name": "keyHash_",
						"type": "bytes32"
					},
					{
						"internalType": "uint64",
						"name": "subId_",
						"type": "uint64"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					}
				],
				"name": "AddressEmptyCode",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "AddressInsufficientBalance",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "AlreadyClaimed",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "AlreadyDrawn",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "DifferentArrayLength",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "FailedInnerCall",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "InvalidStartTime",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "ticket",
						"type": "uint32"
					}
				],
				"name": "InvalidTicket",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NoTicketSpecified",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotEnded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotEnoughTicketsLeft",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotRegistered",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "NotWinner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "have",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "want",
						"type": "address"
					}
				],
				"name": "OnlyCoordinatorCanFulfill",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "OverHundredPercent",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PoolExists",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "PoolNotFound",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "RoundEnded",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "RoundNotStart",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "token",
						"type": "address"
					}
				],
				"name": "SafeERC20FailedOperation",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "ticket",
						"type": "uint32"
					}
				],
				"name": "TicketSold",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "TooManyTickets",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroAddress",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroPrize",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroRoundDuration",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroTicketsExp",
				"type": "error"
			},
			{
				"inputs": [],
				"name": "ZeroWinNumber",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "startTime",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "endTime",
						"type": "uint128"
					}
				],
				"name": "NewRoundOpened",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "prize",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "totalTickets",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "pricePerTicket",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "roundDuration",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "uint128",
						"name": "roundGapTime",
						"type": "uint128"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					}
				],
				"name": "PoolCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					}
				],
				"name": "PrizeClaimed",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint24",
						"name": "oldReferralFee",
						"type": "uint24"
					},
					{
						"indexed": false,
						"internalType": "uint24",
						"name": "newReferralFee",
						"type": "uint24"
					}
				],
				"name": "ReferralFeeUpdated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "ReferralRewardCollected",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "owner",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint32[]",
						"name": "tickets",
						"type": "uint32[]"
					}
				],
				"name": "TicketsSold",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "oldTreasury",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newTreasury",
						"type": "address"
					}
				],
				"name": "TreasuryUpdated",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "HUNDRED_PERCENT",
				"outputs": [
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_TICKETS_PER_BUY",
				"outputs": [
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"internalType": "uint32[]",
						"name": "tickets",
						"type": "uint32[]"
					}
				],
				"name": "buyTickets",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "callbackGasLimit",
				"outputs": [
					{
						"internalType": "uint32",
						"name": "",
						"type": "uint32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "bytes32[]",
						"name": "poolIds",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint256[]",
						"name": "roundIds",
						"type": "uint256[]"
					}
				],
				"name": "claimPrizes",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "collectReferralReward",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "totalTicketsExp",
						"type": "uint8"
					},
					{
						"internalType": "uint128",
						"name": "prize",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "pricePerTicket",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "roundDuration",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "roundGapTime",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "startTime",
						"type": "uint128"
					}
				],
				"name": "createPool",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					}
				],
				"name": "drawEndedRoundAndOpenNewRound",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "getAllPoolIds",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "poolIds",
						"type": "bytes32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getParticipationRecords",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "poolId",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "roundId",
								"type": "uint256"
							},
							{
								"internalType": "uint32",
								"name": "ticket",
								"type": "uint32"
							}
						],
						"internalType": "struct IPoolManager.ParticipationRecord[]",
						"name": "",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					}
				],
				"name": "getPoolInfo",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "prize",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "totalTickets",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "pricePerTicket",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "roundDuration",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "roundGapTime",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "currentRound",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					}
				],
				"name": "getRoundInfo",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "startTime",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "endTime",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "leftTickets",
						"type": "uint128"
					},
					{
						"internalType": "uint256",
						"name": "vrfRequestId",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "winNumber",
						"type": "uint32"
					},
					{
						"internalType": "bool",
						"name": "isClaimed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					}
				],
				"name": "getSoldTickets",
				"outputs": [
					{
						"internalType": "uint32[]",
						"name": "soldTickets",
						"type": "uint32[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "poolId",
						"type": "bytes32"
					},
					{
						"internalType": "uint256",
						"name": "roundId",
						"type": "uint256"
					},
					{
						"internalType": "uint32",
						"name": "ticket",
						"type": "uint32"
					}
				],
				"name": "getTicketOwner",
				"outputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getUnclaimedPrizes",
				"outputs": [
					{
						"internalType": "bytes32[]",
						"name": "poolIds",
						"type": "bytes32[]"
					},
					{
						"internalType": "uint256[]",
						"name": "roundIds",
						"type": "uint256[]"
					},
					{
						"internalType": "uint256",
						"name": "totalPrizes",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "getWonParticipationRecords",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bytes32",
								"name": "poolId",
								"type": "bytes32"
							},
							{
								"internalType": "uint256",
								"name": "roundId",
								"type": "uint256"
							},
							{
								"internalType": "uint32",
								"name": "ticket",
								"type": "uint32"
							}
						],
						"internalType": "struct IPoolManager.ParticipationRecord[]",
						"name": "records",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "keyHash",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minRequestConfirmations",
				"outputs": [
					{
						"internalType": "uint16",
						"name": "",
						"type": "uint16"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "requestId",
						"type": "uint256"
					},
					{
						"internalType": "uint256[]",
						"name": "randomWords",
						"type": "uint256[]"
					}
				],
				"name": "rawFulfillRandomWords",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "referralFee",
				"outputs": [
					{
						"internalType": "uint24",
						"name": "",
						"type": "uint24"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					}
				],
				"name": "referralRewardAccumulated",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "referrer",
						"type": "address"
					}
				],
				"name": "referralRewardAccured",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "subId",
				"outputs": [
					{
						"internalType": "uint64",
						"name": "",
						"type": "uint64"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint32",
						"name": "newGasLimit",
						"type": "uint32"
					}
				],
				"name": "updateCallbackGasLimit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "newKeyHash",
						"type": "bytes32"
					}
				],
				"name": "updateKeyHash",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint16",
						"name": "newMinRequestConfirmations",
						"type": "uint16"
					}
				],
				"name": "updateMinRequestConfirmations",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint24",
						"name": "newReferralFee",
						"type": "uint24"
					}
				],
				"name": "updateReferralFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint64",
						"name": "newSubId",
						"type": "uint64"
					}
				],
				"name": "updateSubId",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "usdt",
				"outputs": [
					{
						"internalType": "contract IERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "userRegistar",
				"outputs": [
					{
						"internalType": "contract IUserRegistar",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "vrfCoordinator",
				"outputs": [
					{
						"internalType": "contract VRFCoordinatorV2Interface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "amount",
						"type": "uint256"
					}
				],
				"name": "withdrawUsdt",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"AddressEmptyCode(address)": [
					{
						"details": "There's no code at `target` (it is not a contract)."
					}
				],
				"AddressInsufficientBalance(address)": [
					{
						"details": "The ETH balance of the account is not enough to perform the operation."
					}
				],
				"FailedInnerCall()": [
					{
						"details": "A call to an address target failed. The target may have reverted."
					}
				],
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				],
				"SafeERC20FailedOperation(address)": [
					{
						"details": "An operation with an ERC20 token failed."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/PoolManager.sol": "PoolManager"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@chainlink/contracts/src/v0.8/vrf/VRFConsumerBaseV2.sol": {
			"keccak256": "0x5a502a5ce16796565815b295bb2d18a0d26d6f23621f733918c971047c6091d7",
			"license": "MIT",
			"urls": [
				"bzz-raw://f03385e076f6c2ad534bffe7c655cf259242e0f133f0ebfd56f914c0dde4a3f4",
				"dweb:/ipfs/QmWkQVSoAoRu1LXQTfDeic9QESjQkjT4G5Kt1VptTaxQDP"
			]
		},
		"@chainlink/contracts/src/v0.8/vrf/interfaces/VRFCoordinatorV2Interface.sol": {
			"keccak256": "0xa9f8b7e09811f4ac9f421116b5d6bcf50b5748025c0cb012aaf5ff7c39a6b46a",
			"license": "MIT",
			"urls": [
				"bzz-raw://d66b2096987616cda4611c109d9904863872ca5852d736b30f0e19e49afde35f",
				"dweb:/ipfs/Qmc6jpm3k3YuJG7U2s3FWr81Vk2rdQBhdqD9sA6b8Cr9BE"
			]
		},
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
			"keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
			"license": "MIT",
			"urls": [
				"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
				"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
			]
		},
		"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
			"keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
			"license": "MIT",
			"urls": [
				"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
				"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
			]
		},
		"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
			"keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
			"license": "MIT",
			"urls": [
				"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
				"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
			]
		},
		"@openzeppelin/contracts/utils/Address.sol": {
			"keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
			"license": "MIT",
			"urls": [
				"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
				"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"contracts/PoolManager.sol": {
			"keccak256": "0x9867157bf94de60f7f8d872ead186e02a9586574cb37c8727cf9b662cc414d28",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://3a80f9fb494480bcbdfa2d019119316beebc98d74f19963666810aee7ed432ff",
				"dweb:/ipfs/QmRXTJL8i491RRAkUM6ybpnRFVyL6sZwYDZ53izLBG7AEm"
			]
		},
		"contracts/interfaces/IPoolManager.sol": {
			"keccak256": "0x5a8ce4c6b6c7de215bf500918865d2fb58d18e94ba5fd1608d3a533c7d561702",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://a751493b6b6495597eee7c9956b9f3db71dca5a3aca18120f3a1d0bccec730dc",
				"dweb:/ipfs/QmV29231YUJf84QsD5N1bjTcdUidGzX4T324fUwnK4NHKv"
			]
		},
		"contracts/interfaces/IRandomNumberGenerator.sol": {
			"keccak256": "0xfe4bcf2e06a43b8bf6d9cc8e2097cc31b4659f47c00f645b3f95a2069ef914df",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://b908b8760cd515e3ee8773399ce02fac2dd193806e85579a1715c677439f48d2",
				"dweb:/ipfs/Qmc1aq6nUSnAXKBgJ7C9jEJVrPbnzLnWsjbRH95NPL3iSN"
			]
		},
		"contracts/interfaces/IUserRegistar.sol": {
			"keccak256": "0x684926e511aea0b1316abed3cfd3de33b611f477a4f9ceb549a36cbd0afd4eb9",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://dcfe29092821d1338f4d015c57f245623e19461367448d8932d398c62225c233",
				"dweb:/ipfs/QmT4LNdcMYtCddX5US5aPhpFZFc5TQvTQ7RjhSWgNRn4L8"
			]
		}
	},
	"version": 1
}